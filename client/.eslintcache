[{"/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/index.js":"1","/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/reportWebVitals.js":"2","/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/App.js":"3","/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/SearchForm.js":"4","/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/StockList.js":"5","/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/StockChart.js":"6","/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/StockForm.js":"7","/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Services/PortfolioService.js":"8","/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Portfolio/PortfolioList.js":"9","/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Portfolio/Portfolio.js":"10","/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/Stock.js":"11","/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Services/StockService.js":"12","/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/getChartData.js":"13"},{"size":500,"mtime":1610199505541,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1610199505542,"results":"16","hashOfConfig":"15"},{"size":3913,"mtime":1610662051465,"results":"17","hashOfConfig":"15"},{"size":869,"mtime":1610626525996,"results":"18","hashOfConfig":"15"},{"size":1413,"mtime":1610697330875,"results":"19","hashOfConfig":"15"},{"size":1863,"mtime":1610699838222,"results":"20","hashOfConfig":"15"},{"size":1456,"mtime":1610626526002,"results":"21","hashOfConfig":"15"},{"size":848,"mtime":1610626525997,"results":"22","hashOfConfig":"15"},{"size":1363,"mtime":1610662051466,"results":"23","hashOfConfig":"15"},{"size":802,"mtime":1610662051465,"results":"24","hashOfConfig":"15"},{"size":414,"mtime":1610626525999,"results":"25","hashOfConfig":"15"},{"size":398,"mtime":1610626525998,"results":"26","hashOfConfig":"15"},{"size":772,"mtime":1610699317866,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1noh16z",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/index.js",[],["58","59"],"/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/reportWebVitals.js",[],"/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/App.js",["60","61","62","63","64"],"import {useState, useEffect} from \"react\";\nimport Chart from './StockData/StockChart'\nimport {chartInstance} from './StockData/StockChart'\nimport {getPortfolio} from \"./Services/PortfolioService\";\nimport StockList from \"./StockData/StockList\";\nimport StockForm from './StockData/StockForm';\nimport SearchForm from \"./SearchForm\";\nimport './App.css'; \nimport { ScrollView } from \"@cantonjs/react-scroll-view\";\nimport PortfolioList from \"./Portfolio/PortfolioList\";\nimport {deleteStock as apiDeleteStock} from \"./Services/PortfolioService\";\n\n\nfunction App() {\n  const [stocks, setPortfolio] = useState([]);\n  const [symbol, setSymbol] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [portfolioTotal, setPortfolioTotal] = useState(0);\n\n\n  useEffect(() => {\n    getPortfolio()\n    .then((stocks) => {\n      setPortfolio(stocks);\n    })  \n    console.log(stocks)\n  }, [])\n\n  // This is the local (client-side) update\n  const addStock = (stock) => {\n    const buyStock = stock.map(s => s);\n    buyStock.push(stock);\n    setPortfolio(buyStock);\n  }\n\n  const findStocks = (code) => {\n    // need to add code in here to use an id from the (full) stocks\n    // list so that it can be sent back \n\n    /*\n    PortfolioService.getSearchStock(code)\n    .then(set search result form data)\n    */\n    \n    // Need to add code in here - probably will need a useState for the search field too.\n  }\n\n  const updateStock = updatedStock => {\n    //update in DB \n    updateStock(updatedStock).then(() =>{\n  \n    const updatedStocksIndex = stocks.findIndex(s => s._id === updatedStock._id);\n\n    const updatedStocks = [...stocks];\n    updatedStocks[updatedStocksIndex] = updatedStocks;\n\n    setPortfolio(updatedStocks);\n  })\n  };\n\n  const deleteStock = (id) => {\n\n    apiDeleteStock(id).then(() =>{\n      const removeStock = stocks.map(s => s);\n\n      const stockToDelete = removeStock.map(s => s._id).indexOf(id);\n\n      removeStock.splice(stockToDelete, 1);\n\n      setPortfolio(removeStock);\n    })\n}\n\n  const onStockSelected = (symbol, name, price) => {\n    setSymbol(symbol);\n    setName(name);\n    setPrice(price);\n  }\n\n  const onPurchase = (symbol, name, price, volume) => {\n    \n    // Create object to hold purchase details\n    const purchaseObject = {\n                        symbol, \n                        name,\n                        price, \n                        volume, \n    }\n    \n    // Update portfolio with new shares\n    return purchaseObject\n\n  }\n\n  return (\n    <>\n    <header>\n      <div className = \"grid-items\">\n      <h2 className=\"grid-item\">NIK Ltd</h2>\n      <h1 className=\"grid-item\">Buy Stocks Online Today <br></br>Start Building Your Portfolio</h1>\n      </div>\n    </header>\n    <hr className=\"header-hr\"></hr>\n    <SearchForm searchStock={findStocks} />\n    <br></br>\n    <h4 className=\"form-heading\">Add To Your Portfolio Now ‚ÜòÔ∏è</h4>\n    <div className=\"stockinfo \">\n    <StockForm symbol={symbol} name={name} price={price} onPurchase={onPurchase} />\n    <Chart className=\"chart\"/>\n    </div>\n    <h3> Latest Market Trends</h3>\n    <ScrollView className=\"scrollview-data\">\n        <StockList onStockSelected={onStockSelected}/>\n    </ScrollView>\n    \n      <br></br>\n      <div idName=\"portfolio-heading\" ><h3>Client Portfolio</h3></div>\n      \n      <br></br>\n      <PortfolioList className=\"portfolio-table\" stocks={stocks} deleteStock={deleteStock} portfolioTotal ={portfolioTotal}/>\n\n      <br></br>\n      <footer>\n        <hr className=\"footer-hr\"></hr>\n        <div className=\"reviews\">\n          <h5>What our clients say üí¨\n            <br></br>\n              ‚ùùSimple to use. Helpful information about different types of investment, easy to understand even if you don't know anything about investing‚ùû</h5>\n        </div>\n      </footer>\n      <h1 className=\"bottom-logo\">NIK Ltd</h1>\n      </>\n  );\n}\n\nexport default App;\n","/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/SearchForm.js",[],"/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/StockList.js",["65","66"],"/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/StockChart.js",["67","68","69"],"/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/StockForm.js",[],"/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Services/PortfolioService.js",[],"/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Portfolio/PortfolioList.js",["70","71"],"import {stock, deleteStock} from \"../Services/PortfolioService\";\nimport Portfolio from './Portfolio.js';\n\nconst PortfolioList = ({stocks}) => {\n    let portfolioTotal = 0\n\n    // function to check if string is a float\n    const isFloat = (x) => { return !!(x % 1); }\n\n    // function to check if the string is an int\n    const isInt = (value) => {\n        return !isNaN(value) && \n               parseInt(Number(value)) == value && \n               !isNaN(parseInt(value, 10));\n      }\n\n    const portfolioInfo = stocks.map(stock => {\n\n        // convert price to numeric\n        // const price = parseFloat(stock.price);\n\n        if (isFloat(parseFloat(stock.price))) {\n            \n            // Accumulated total - using float data\n            portfolioTotal += parseFloat(stock.price) * parseInt(stock.volume);\n\n        } else if (isInt(parseInt(stock.price))) {\n\n            // Accumulated total - using int data\n            portfolioTotal += parseInt(stock.price) * parseInt(stock.volume);\n        }\n\n\n        return (\n        <Portfolio\n        key = {stock._id}\n        stock ={stock}\n        deleteStock={deleteStock}\n        />\n        )\n    });\n\n    portfolioTotal /= 100;\n\n    portfolioInfo.push(\"Current Portfolio: ¬£ \" + Math.round(portfolioTotal));\n    return (\n        <>\n        {portfolioInfo}\n        </>\n    );\n}\n\nexport default PortfolioList;","/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Portfolio/Portfolio.js",["72"],"import {stock, deleteStock} from \"../Services/PortfolioService\";\n\nconst Portfolio = ({stock}) => {\n        \n\n    return (\n        <> \n        <table className=\"portfolio-data\" >\n            <tr>\n                <th> Symbol</th>\n                <th> Name</th>\n                <th> Price</th>\n                <th> Number of Shares</th>\n                <th> Sell Shares</th>\n            </tr>\n            <tr>\n                <td>{stock.symbol}</td>\n                <td>{stock.name}</td>\n                <td>{stock.price}</td>\n                <td>{stock.volume}</td>\n                <td><button className=\"delete-button\" onClick={()=>deleteStock(stock._id).then(() => window.location.reload() )}> $  </button></td>\n            </tr>\n        </table>\n        </>\n       \n    )\n}\n\n\nexport default Portfolio;","/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/Stock.js",[],"/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Services/StockService.js",[],"/Users/codeclanstudent/codeclan_work/group_project/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/getChartData.js",["73","74","75","76","77","78","79"],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":3,"column":9,"nodeType":"86","messageId":"87","endLine":3,"endColumn":22},{"ruleId":"84","severity":1,"message":"88","line":19,"column":26,"nodeType":"86","messageId":"87","endLine":19,"endColumn":43},{"ruleId":"89","severity":1,"message":"90","line":28,"column":6,"nodeType":"91","endLine":28,"endColumn":8,"suggestions":"92"},{"ruleId":"84","severity":1,"message":"93","line":31,"column":9,"nodeType":"86","messageId":"87","endLine":31,"endColumn":17},{"ruleId":"84","severity":1,"message":"94","line":51,"column":5,"nodeType":"86","messageId":"87","endLine":51,"endColumn":16},{"ruleId":"84","severity":1,"message":"95","line":2,"column":24,"nodeType":"86","messageId":"87","endLine":2,"endColumn":38},{"ruleId":"89","severity":1,"message":"96","line":37,"column":6,"nodeType":"91","endLine":37,"endColumn":8,"suggestions":"97"},{"ruleId":"84","severity":1,"message":"98","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":17},{"ruleId":"84","severity":1,"message":"99","line":3,"column":20,"nodeType":"86","messageId":"87","endLine":3,"endColumn":25},{"ruleId":"84","severity":1,"message":"100","line":69,"column":9,"nodeType":"86","messageId":"87","endLine":69,"endColumn":22},{"ruleId":"84","severity":1,"message":"101","line":1,"column":9,"nodeType":"86","messageId":"87","endLine":1,"endColumn":14},{"ruleId":"102","severity":1,"message":"103","line":13,"column":40,"nodeType":"104","messageId":"105","endLine":13,"endColumn":42},{"ruleId":"84","severity":1,"message":"101","line":1,"column":9,"nodeType":"86","messageId":"87","endLine":1,"endColumn":14},{"ruleId":"84","severity":1,"message":"106","line":9,"column":19,"nodeType":"86","messageId":"87","endLine":9,"endColumn":27},{"ruleId":"84","severity":1,"message":"107","line":13,"column":13,"nodeType":"86","messageId":"87","endLine":13,"endColumn":18},{"ruleId":"84","severity":1,"message":"108","line":17,"column":17,"nodeType":"86","messageId":"87","endLine":17,"endColumn":26},{"ruleId":"109","severity":1,"message":"110","line":25,"column":11,"nodeType":"86","messageId":"111","endLine":25,"endColumn":16},{"ruleId":"89","severity":1,"message":"112","line":25,"column":17,"nodeType":"113","endLine":25,"endColumn":24},{"ruleId":"109","severity":1,"message":"114","line":26,"column":11,"nodeType":"86","messageId":"111","endLine":26,"endColumn":16},{"ruleId":"89","severity":1,"message":"115","line":26,"column":17,"nodeType":"113","endLine":26,"endColumn":24},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'chartInstance' is defined but never used.","Identifier","unusedVar","'setPortfolioTotal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'stocks'. Either include it or remove the dependency array.","ArrayExpression",["118"],"'addStock' is assigned a value but never used.","'updateStock' is assigned a value but never used.","'getStockSymbol' is defined but never used.","React Hook useEffect has a missing dependency: 'onStockSelected'. Either include it or remove the dependency array.",["119"],"'ChartData' is defined but never used.","'xAxis' is defined but never used.","'updateDataset' is assigned a value but never used.","'stock' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setyAxis' is assigned a value but never used.","'count' is assigned a value but never used.","'chartData' is assigned a value but never used.","no-const-assign","'xAxis' is constant.","const","Assignments to the 'xAxis' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","'yAxis' is constant.","Assignments to the 'yAxis' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [stocks]",{"range":"124","text":"125"},"Update the dependencies array to be: [onStockSelected]",{"range":"126","text":"127"},[921,923],"[stocks]",[1024,1026],"[onStockSelected]"]