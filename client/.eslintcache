[{"/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/index.js":"1","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/reportWebVitals.js":"2","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/App.js":"3","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/SearchForm.js":"4","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Services/PortfolioService.js":"5","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/StockList.js":"6","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/StockForm.js":"7","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Portfolio/PortfolioList.js":"8","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Portfolio/Portfolio.js":"9","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/Stock.js":"10","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Services/StockService.js":"11"},{"size":500,"mtime":1610215365346,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1610215365346,"results":"14","hashOfConfig":"13"},{"size":2951,"mtime":1610559945496,"results":"15","hashOfConfig":"13"},{"size":869,"mtime":1610361894181,"results":"16","hashOfConfig":"13"},{"size":1283,"mtime":1610560158414,"results":"17","hashOfConfig":"13"},{"size":1734,"mtime":1610543173819,"results":"18","hashOfConfig":"13"},{"size":1499,"mtime":1610558758696,"results":"19","hashOfConfig":"13"},{"size":326,"mtime":1610543631185,"results":"20","hashOfConfig":"13"},{"size":627,"mtime":1610560513481,"results":"21","hashOfConfig":"13"},{"size":475,"mtime":1610543173817,"results":"22","hashOfConfig":"13"},{"size":398,"mtime":1610445239116,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1i4agvb",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/index.js",[],["50","51"],"/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/reportWebVitals.js",[],"/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/App.js",["52","53","54","55"],"import {useState, useEffect} from \"react\";\nimport {getPortfolio} from \"./Services/PortfolioService\";\nimport StockList from \"./StockData/StockList\";\nimport StockForm from './StockData/StockForm';\nimport SearchForm from \"./SearchForm\";\nimport './App.css'; \nimport { ScrollView } from \"@cantonjs/react-scroll-view\";\nimport PortfolioList from \"./Portfolio/PortfolioList\";\n\n\nfunction App() {\n  const [stocks, setPortfolio] = useState([]);\n  const [symbol, setSymbol] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n\n\n  useEffect(() => {\n    getPortfolio(\"123456\")\n    .then((stocks) => {\n      setPortfolio(stocks);\n    })  \n    console.log(stocks)\n  }, [])\n\n  // This is the local (client-side) update\n  const addStock = (stock) => {\n    const buyStock = stock.map(shares => shares);\n    buyStock.push(stock);\n    setPortfolio(buyStock);\n  }\n\n  const findStocks = (code) => {\n    // need to add code in here to use an id from the (full) stocks\n    // list so that it can be sent back \n\n    /*\n    PortfolioService.getSearchStock(code)\n    .then(set search result form data)\n    */\n    \n    // Need to add code in here - probably will need a useState for the search field too.\n  }\n\n  const updateStock = updatedStock => {\n    //update in DB \n    updateStock(updatedStock);\n    //update locally\n    const updatedStocksIndex = stocks.findIndex(stock => stock._id === updatedStock._id);\n    const updatedStocks = [...stocks];\n    updatedStocks[updatedStocksIndex] = updatedStocks;\n    setPortfolio(updatedStocks);\n  };\n\n  const deleteStock = (id) => {\n    const removeStock = stocks.map(shares => shares);\n    const stockToDelete = removeStock.map(shares => shares._id).indexOf(id);\n    console.log(stockToDelete);\n\n    removeStock.splice(stockToDelete, 1);\n    setPortfolio(removeStock);\n  };\n\n  const handleEndReached = () => {\n    console.log(\"load more\");\n  };\n\n  const onStockSelected = (symbol, name, price) => {\n    setSymbol(symbol);\n    setName(name);\n    setPrice(price);\n  }\n\n  const onPurchase = (symbol, name, price, volume) => {\n    \n    // Create object to hold purchase details\n    const purchaseObject = {\n                        symbol, \n                        name,\n                        price, \n                        volume, \n    }\n    \n    // Update portfolio with new shares\n    // console.log(\"Hi \" + purchaseObject)\n    return purchaseObject\n\n  }\n\n\n  return (\n    <>\n    <header>\n      <h3>NIK Ltd    Live Market     My Portfolio</h3>\n    </header>\n    <div>\n    <SearchForm searchStock={findStocks} />\n    <br></br>\n    <StockForm symbol={symbol} name={name} price={price} onPurchase={onPurchase} />\n    <h4>Current Market Trends</h4>\n    <ScrollView className=\"scrollview-data\" onEndReached={handleEndReached}>\n        <StockList onStockSelected={onStockSelected}/>\n      </ScrollView>\n      </div>\n      <PortfolioList stocks = {stocks}/>\n      </>\n  );\n}\n\nexport default App;\n","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/SearchForm.js",[],"/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Services/PortfolioService.js",[],"/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/StockList.js",["56","57","58"],"import {useState, useEffect} from \"react\";\nimport {getStockIndex, getStockSymbol} from \"../Services/StockService\";\nimport Stock from \"./Stock\"\n\n\nconst StockList = ({onStockSelected}) => {\n\n    const [stockIndex, setStockIndex] = useState([]);\n    const [symbol, setsymbol] = useState([]);\n  \n    useEffect(() => {\n      getStockIndex(\"ftse\")\n      .then((allStockIndex) => {\n  \n      const stockNodes = allStockIndex.feed.entry.map((stock) => {  \n        let output = {};\n          if (stock){\n            stock.content['$t'].split(\", \").forEach(str => {\n              let [key, value] = str.split(\": \");\n              if (value === \"#N/A\") {\n                value = null;\n            }\n              output[key] = value;           \n          });        \n        };   \n\n        return(\n            <Stock \n            symbol = {stock.title['$t']}\n            name = {output.name}\n            price = {output.price}\n            change = {output.change} \n            onStockSelected={onStockSelected}/> \n            )\n      });\n      setStockIndex(stockNodes)\n    })\n  }, [])\n   \n    useEffect(() => {\n      getStockSymbol(\"IBM\")\n      .then((allSymbolData) => {\n        const values = Object.values(allSymbolData[\"Time Series (Daily)\"])\n        console.log(values[0][\"2. high\"])\n      });\n      \n    }, [])\n    \n    return(\n        <>\n        <table className=\"index-data-area\">\n          <tr className=\"heading\" itemScope=\"rowgroup\">\n            <th>Symbol</th>\n            <th>Company Name</th>\n            <th itemID=\"price\">Price</th>\n            <th itemID=\"change\">Change +/-</th>\n            <hr></hr>\n          </tr>\n          <br></br>\n          {stockIndex}\n        </table>\n        </>\n        )\n}\n\nexport default StockList;","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/StockForm.js",[],"/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Portfolio/PortfolioList.js",[],"/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Portfolio/Portfolio.js",[],"/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/Stock.js",[],"/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Services/StockService.js",[],["59","60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":24,"column":6,"nodeType":"67","endLine":24,"endColumn":8,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":27,"column":9,"nodeType":"71","messageId":"72","endLine":27,"endColumn":17},{"ruleId":"69","severity":1,"message":"73","line":47,"column":5,"nodeType":"71","messageId":"72","endLine":47,"endColumn":16},{"ruleId":"69","severity":1,"message":"74","line":55,"column":9,"nodeType":"71","messageId":"72","endLine":55,"endColumn":20},{"ruleId":"69","severity":1,"message":"75","line":9,"column":12,"nodeType":"71","messageId":"72","endLine":9,"endColumn":18},{"ruleId":"69","severity":1,"message":"76","line":9,"column":20,"nodeType":"71","messageId":"72","endLine":9,"endColumn":29},{"ruleId":"65","severity":1,"message":"77","line":38,"column":6,"nodeType":"67","endLine":38,"endColumn":8,"suggestions":"78"},{"ruleId":"61","replacedBy":"79"},{"ruleId":"63","replacedBy":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'stocks'. Either include it or remove the dependency array.","ArrayExpression",["83"],"no-unused-vars","'addStock' is assigned a value but never used.","Identifier","unusedVar","'updateStock' is assigned a value but never used.","'deleteStock' is assigned a value but never used.","'symbol' is assigned a value but never used.","'setsymbol' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onStockSelected'. Either include it or remove the dependency array.",["84"],["81"],["82"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},"Update the dependencies array to be: [stocks]",{"range":"89","text":"90"},"Update the dependencies array to be: [onStockSelected]",{"range":"91","text":"92"},[699,701],"[stocks]",[1070,1072],"[onStockSelected]"]