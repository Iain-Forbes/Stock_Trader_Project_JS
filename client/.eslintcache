[{"/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/index.js":"1","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/reportWebVitals.js":"2","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/App.js":"3","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/SearchForm.js":"4","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/StockChart.js":"5","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/StockForm.js":"6","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Portfolio/PortfolioList.js":"7","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Services/PortfolioService.js":"8","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/StockList.js":"9","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Portfolio/Portfolio.js":"10","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/Stock.js":"11","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Services/StockService.js":"12"},{"size":500,"mtime":1610215365346,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1610215365346,"results":"15","hashOfConfig":"14"},{"size":3913,"mtime":1610659934677,"results":"16","hashOfConfig":"14"},{"size":869,"mtime":1610626390407,"results":"17","hashOfConfig":"14"},{"size":1673,"mtime":1610643585731,"results":"18","hashOfConfig":"14"},{"size":1456,"mtime":1610626390411,"results":"19","hashOfConfig":"14"},{"size":1363,"mtime":1610654445571,"results":"20","hashOfConfig":"14"},{"size":848,"mtime":1610626390408,"results":"21","hashOfConfig":"14"},{"size":2572,"mtime":1610652908721,"results":"22","hashOfConfig":"14"},{"size":802,"mtime":1610660818432,"results":"23","hashOfConfig":"14"},{"size":414,"mtime":1610626390409,"results":"24","hashOfConfig":"14"},{"size":398,"mtime":1610626390409,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1i4agvb",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/index.js",[],"/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/reportWebVitals.js",[],"/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/App.js",["54","55","56","57","58"],"/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/SearchForm.js",[],"/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/StockChart.js",["59"],"import React, { useEffect, useRef, useState } from \"react\";\nimport Chartjs from \"chart.js\";\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\n\nconst chartConfig = {\n\n  type: \"line\",\n  plugins: [ChartDataLabels],\n  data: {\n    labels: [\"2021-01-13\", \"2021-01-12\", \"2021-01-11\"],\n    datasets: [{\n    label: \"MSFT Closing Share Values\",\n    data: [216.3400, 214.9300, 217.4900],\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\",\n          \"rgba(153, 102, 255, 0.2)\",\n          \"rgba(255, 159, 64, 0.2)\"\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\",\n          \"rgba(54, 162, 235, 1)\",\n          \"rgba(255, 206, 86, 1)\",\n          \"rgba(75, 192, 192, 1)\",\n          \"rgba(153, 102, 255, 1)\",\n          \"rgba(255, 159, 64, 1)\"\n        ],\n        borderWidth: 1\n      }\n    ]\n  },\n  options: {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true\n          }\n        }\n      ]\n    }\n  }\n};\n\nconst Chart = () => {\n  const chartContainer = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer]);\n\n  const updateDataset = (datasetIndex, newData) => {\n    chartInstance.data.datasets[datasetIndex].data = newData;\n    chartInstance.update();\n  };\n\n  return (\n\n    <div>\n      <canvas ref={chartContainer} />\n    </div>\n  );\n};\n\nexport default Chart;",["60","61"],"/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/StockForm.js",[],"/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Portfolio/PortfolioList.js",["62","63"],"import {stock, deleteStock} from \"../Services/PortfolioService\";\nimport Portfolio from './Portfolio.js';\n\nconst PortfolioList = ({stocks}) => {\n    let portfolioTotal = 0\n\n    // function to check if string is a float\n    const isFloat = (x) => { return !!(x % 1); }\n\n    // function to check if the string is an int\n    const isInt = (value) => {\n        return !isNaN(value) && \n               parseInt(Number(value)) == value && \n               !isNaN(parseInt(value, 10));\n      }\n\n    const portfolioInfo = stocks.map(stock => {\n\n        // convert price to numeric\n        // const price = parseFloat(stock.price);\n\n        if (isFloat(parseFloat(stock.price))) {\n            \n            // Accumulated total - using float data\n            portfolioTotal += parseFloat(stock.price) * parseInt(stock.volume);\n\n        } else if (isInt(parseInt(stock.price))) {\n\n            // Accumulated total - using int data\n            portfolioTotal += parseInt(stock.price) * parseInt(stock.volume);\n        }\n\n\n        return (\n        <Portfolio\n        key = {stock._id}\n        stock ={stock}\n        deleteStock={deleteStock}\n        />\n        )\n    });\n\n    portfolioTotal /= 100;\n\n    portfolioInfo.push(\"Current Portfolio: Â£ \" + Math.round(portfolioTotal));\n    return (\n        <>\n        {portfolioInfo}\n        </>\n    );\n}\n\nexport default PortfolioList;","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Services/PortfolioService.js",[],"/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/StockList.js",["64","65","66","67","68"],"import {useState, useEffect} from \"react\";\nimport {getStockIndex, getStockSymbol} from \"../Services/StockService\";\nimport Stock from \"./Stock\"\n\nconst StockList = ({onStockSelected}) => {\n\n    const [stockIndex, setStockIndex] = useState([]);\n    const [symbol, setsymbol] = useState([]);\n    \n    // const [xAxis, setxAxis] = useState([]);\n    // const [yAxis, setyAxis] = useState([]);\n\n    let yAxis = [];\n    let xAxis = [];\n\n  \n    useEffect(() => {\n      getStockIndex(\"ftse\")\n      .then((allStockIndex) => {\n  \n      const stockNodes = allStockIndex.feed.entry.map((stock) => {  \n        let output = {};\n          if (stock){\n            stock.content['$t'].split(\", \").forEach(str => {\n              let [key, value] = str.split(\": \");\n              if (value === \"#N/A\") {\n                value = null;\n            }\n              output[key] = value;           \n          });        \n        };   \n\n        return(\n            <Stock \n            symbol = {stock.title['$t']}\n            name = {output.name}\n            price = {output.price}\n            change = {output.change} \n            onStockSelected={onStockSelected}/> \n            )\n      });\n      setStockIndex(stockNodes)\n    })\n  }, [])\n   \n    useEffect(() => {\n\n      let count = 0;\n\n      getStockSymbol(\"MSFT\")\n      .then((allSymbolData) => {\n        const values = Object.values(allSymbolData[\"Time Series (Daily)\"]).forEach(function (date) {\n\n          // Create x-axis data - using a count increment\n          xAxis.push(count);\n\n          // Create y-axis data - using closing position\n          yAxis.push(date[\"4. close\"]);\n\n          // Increment\n          count += 1;\n\n\n          Object.entries(date).forEach(function([...date]) {\n            // console.log(date);\n\n            // I'm not sure that we need this part?\n            // I'm not sure that we need this part?\n            // I'm not sure that we need this part?\n\n          })\n        })\n  \n      });\n\n      // This most likely will be called BEFORE the data has been\n      // retrieved from the fetch, and therefore will be emmpty.\n      console.log(\"This is the ARRAY: \" + yAxis);\n\n    }, [])\n    \n    return(\n        <>\n        <table className=\"index-data-area\">\n          <tr className=\"heading\" itemScope=\"rowgroup\">\n            <th>Symbol</th>\n            <th>Company Name</th>\n            <th itemID=\"price\">Price</th>\n            <th itemID=\"change\">Change +/-</th>\n            <hr></hr>\n          </tr>\n          <br></br>\n          {stockIndex}\n        </table>\n        </>\n        )\n}\n\nexport default StockList;","/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Portfolio/Portfolio.js",["69"],"/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/StockData/Stock.js",[],"/Users/knichols02/codeclan_work/week_08/day_5/nahmed99-wk8_day4_react_express_mogodb_project/client/src/Services/StockService.js",[],{"ruleId":"70","severity":1,"message":"71","line":3,"column":9,"nodeType":"72","messageId":"73","endLine":3,"endColumn":22},{"ruleId":"70","severity":1,"message":"74","line":19,"column":26,"nodeType":"72","messageId":"73","endLine":19,"endColumn":43},{"ruleId":"75","severity":1,"message":"76","line":28,"column":6,"nodeType":"77","endLine":28,"endColumn":8,"suggestions":"78"},{"ruleId":"70","severity":1,"message":"79","line":31,"column":9,"nodeType":"72","messageId":"73","endLine":31,"endColumn":17},{"ruleId":"70","severity":1,"message":"80","line":51,"column":5,"nodeType":"72","messageId":"73","endLine":51,"endColumn":16},{"ruleId":"70","severity":1,"message":"81","line":58,"column":9,"nodeType":"72","messageId":"73","endLine":58,"endColumn":22},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"70","severity":1,"message":"86","line":1,"column":9,"nodeType":"72","messageId":"73","endLine":1,"endColumn":14},{"ruleId":"87","severity":1,"message":"88","line":13,"column":40,"nodeType":"89","messageId":"90","endLine":13,"endColumn":42},{"ruleId":"70","severity":1,"message":"91","line":8,"column":12,"nodeType":"72","messageId":"73","endLine":8,"endColumn":18},{"ruleId":"70","severity":1,"message":"92","line":8,"column":20,"nodeType":"72","messageId":"73","endLine":8,"endColumn":29},{"ruleId":"75","severity":1,"message":"93","line":44,"column":6,"nodeType":"77","endLine":44,"endColumn":8,"suggestions":"94"},{"ruleId":"70","severity":1,"message":"95","line":52,"column":15,"nodeType":"72","messageId":"73","endLine":52,"endColumn":21},{"ruleId":"75","severity":1,"message":"96","line":80,"column":8,"nodeType":"77","endLine":80,"endColumn":10,"suggestions":"97"},{"ruleId":"70","severity":1,"message":"86","line":1,"column":9,"nodeType":"72","messageId":"73","endLine":1,"endColumn":14},"no-unused-vars","'chartInstance' is defined but never used.","Identifier","unusedVar","'setPortfolioTotal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'stocks'. Either include it or remove the dependency array.","ArrayExpression",["98"],"'addStock' is assigned a value but never used.","'updateStock' is assigned a value but never used.","'updateDataset' is assigned a value but never used.","no-native-reassign",["99"],"no-negated-in-lhs",["100"],"'stock' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'symbol' is assigned a value but never used.","'setsymbol' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onStockSelected'. Either include it or remove the dependency array.",["101"],"'values' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'xAxis' and 'yAxis'. Either include them or remove the dependency array.",["102"],{"desc":"103","fix":"104"},"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [stocks]",{"range":"109","text":"110"},"Update the dependencies array to be: [onStockSelected]",{"range":"111","text":"112"},"Update the dependencies array to be: [xAxis, yAxis]",{"range":"113","text":"114"},[921,923],"[stocks]",[1210,1212],"[onStockSelected]",[2140,2142],"[xAxis, yAxis]"]